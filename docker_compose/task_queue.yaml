services:
  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  redisinsight:
    container_name: redisinsight
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/data
    networks:
      - backend
    depends_on:
      - redis
    restart: unless-stopped

  celery-worker:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: celery-worker
    command: celery -A infrastructure.task_queues.celery_app worker --loglevel=info
    env_file:
      - ../.env
    volumes:
      - ../app/:/app/
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

  flower:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: flower
    command: celery -A infrastructure.task_queues.celery_app flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - ../.env
    volumes:
      - ../app/:/app/
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started
    networks:
      - backend
    restart: unless-stopped

volumes:
  redis_data:
  redisinsight_data:

networks:
  backend:
    driver: bridge

